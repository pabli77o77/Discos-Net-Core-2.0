// <auto-generated />
using Disqueria.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Disqueria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181126000952_disqueria-init")]
    partial class disqueriainit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Disqueria.Models.Artista", b =>
                {
                    b.Property<int>("ArtistaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("Artista")
                        .HasMaxLength(100);

                    b.HasKey("ArtistaID");

                    b.HasIndex("GeneroID");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("Disqueria.Models.Disco", b =>
                {
                    b.Property<int>("DiscoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DiscoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistaID");

                    b.Property<int>("DiscograficaID");

                    b.Property<int>("GeneroID");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasMaxLength(100);

                    b.HasKey("DiscoID");

                    b.HasIndex("ArtistaID");

                    b.HasIndex("DiscograficaID");

                    b.HasIndex("GeneroID");

                    b.ToTable("Discos");
                });

            modelBuilder.Entity("Disqueria.Models.Discografica", b =>
                {
                    b.Property<int>("DiscograficaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("Discografica")
                        .HasMaxLength(100);

                    b.HasKey("DiscograficaID");

                    b.ToTable("Discograficas");
                });

            modelBuilder.Entity("Disqueria.Models.Entidad", b =>
                {
                    b.Property<int>("EntidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EntidadID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TipoEntidad")
                        .HasColumnName("TipoEntidad");

                    b.HasKey("EntidadID");

                    b.ToTable("Entidad");
                });

            modelBuilder.Entity("Disqueria.Models.Genero", b =>
                {
                    b.Property<int>("GeneroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GeneroID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("Genero")
                        .HasMaxLength(100);

                    b.HasKey("GeneroID");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Disqueria.Models.Artista", b =>
                {
                    b.HasOne("Disqueria.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Disqueria.Models.Disco", b =>
                {
                    b.HasOne("Disqueria.Models.Artista", "Artista")
                        .WithMany()
                        .HasForeignKey("ArtistaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Disqueria.Models.Discografica", "Discografica")
                        .WithMany()
                        .HasForeignKey("DiscograficaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Disqueria.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
